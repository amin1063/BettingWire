@model IEnumerable<SimpleNewsPortal.Models.News>

@{
    ViewData["Title"] = "BetWire — Live Betting News";
    // Optional: change the default site name here if you like
    var siteName = "BetWire";
}

<section class="mb-4">
    <div class="d-flex align-items-center justify-content-between gap-3">
        <div>
            <h1 class="h3 mb-0"><span class="text-primary fw-bold">@siteName</span> — Latest Betting News</h1>
            <small class="text-muted">Real-time updates posted by the admin</small>
        </div>

        <!-- Search box (client-side filter) -->
        <div class="flex-fill ms-3" style="max-width:420px;">
            <input id="newsSearch" class="form-control" placeholder="Search headlines or descriptions..." />
        </div>
    </div>
</section>

<section>
    <div id="newsGrid" class="row g-3">
        @foreach (var item in Model)
        {
            // Truncate description for card preview
            var preview = item.Description?.Length > 220 ? item.Description.Substring(0, 220) + "…" : item.Description;
            <div class="col-12 col-md-6 col-lg-4 news-card" data-title="@item.Title.ToLower()" data-desc="@((item.Description ?? "").ToLower())">
                <div class="card h-100 shadow-sm">
                    <div class="card-body d-flex flex-column">
                        <div class="mb-2">
                            <span class="badge bg-danger">Betting</span>
                            <small class="text-muted ms-2">@item.CreatedDate.ToString("dd MMM yyyy, HH:mm")</small>
                        </div>

                        <h5 class="card-title">@item.Title</h5>

                        <p class="card-text text-muted flex-grow-1">@Html.Raw(preview.Replace("\n", "<br/>"))</p>

                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#readModal" data-title="@System.Net.WebUtility.HtmlEncode(item.Title)" data-desc="@System.Net.WebUtility.HtmlEncode(item.Description)">Read more</button>

                          
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div id="noResults" class="text-center text-muted mt-5 d-none">
        <p class="lead">No news found for your search.</p>
    </div>
</section>

<!-- Read More Modal -->
<div class="modal fade" id="readModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modalTitle" class="modal-title"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modalDesc"></div>
            </div>
            <div class="modal-footer">
                <small class="text-muted me-auto">Posted on: <span id="modalDate"></span></small>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search/filter: simple client side
        (function () {
          const searchInput = document.getElementById('newsSearch');
          const cards = Array.from(document.querySelectorAll('.news-card'));
          const noResults = document.getElementById('noResults');

          function filter() {
            const q = searchInput.value.trim().toLowerCase();
            let visible = 0;
            cards.forEach(c => {
              const title = c.getAttribute('data-title') || '';
              const desc = c.getAttribute('data-desc') || '';
              const match = q === '' || title.includes(q) || desc.includes(q);
              c.style.display = match ? '' : 'none';
              if (match) visible++;
            });
            noResults.classList.toggle('d-none', visible > 0);
          }
          searchInput.addEventListener('input', filter);

          // Modal: populate with content when opened
          const readModal = document.getElementById('readModal');
          readModal.addEventListener('show.bs.modal', function (e) {
            const btn = e.relatedTarget;
            const title = btn.getAttribute('data-title') || '';
            const desc = btn.getAttribute('data-desc') || '';
            // find the date from the nearest card (fallback: blank)
            const card = btn.closest('.news-card');
            const dateEl = card ? card.querySelector('.text-muted') : null;
            const dateText = dateEl ? dateEl.textContent.trim() : '';

            document.getElementById('modalTitle').textContent = title;
            // decode HTML entities and preserve new lines
            document.getElementById('modalDesc').innerHTML = desc.replace(/\n/g, "<br/>");
            document.getElementById('modalDate').textContent = dateText;
          });
        })();
    </script>

    <style>
        /* small visual polish */
        .card-title {
            font-weight: 700;
            font-size: 1.05rem;
        }

        .card-text {
            font-size: .95rem;
        }

        .badge {
            font-weight: 600;
        }
        /* improve spacing on small screens */
        @@media (max-width: 576px) {
            #newsGrid .card

        {
            min-height: 180px;
        }

        }
    </style>
}
